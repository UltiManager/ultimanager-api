# Generated by Django 2.2.5 on 2019-09-14 02:33

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [("auth", "0011_update_proxy_permissions")]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="A unique identifier for the instance.",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "time_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time of the object's creation.",
                        verbose_name="creation time",
                    ),
                ),
                (
                    "time_updated",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The date and time of the last update made to the object.",
                        verbose_name="last update time",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="A boolean indicating if the user account is active and permitted to log in.",
                        verbose_name="is active",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="A boolean indicating if the user is permitted to access the staff interface.",
                        verbose_name="is staff",
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="A boolean indicating if the user should be granted all permissions even if they are not explicitly assigned.",
                        verbose_name="is superuser",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A publicly displayed name for the user.",
                        max_length=100,
                        verbose_name="name",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "ordering": ("time_created",),
                "abstract": False,
            },
        )
    ]
